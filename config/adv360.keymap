/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt { tapping-term-ms = <150>; };

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Cut {
            bindings = <&kp LG(X)>;
            key-positions = <47 48>;
        };

        Copy {
            bindings = <&kp LG(C)>;
            key-positions = <47 49>;
        };

        Paste {
            bindings = <&kp LG(V)>;
            key-positions = <47 50>;
        };

        Refresh {
            bindings = <&kp LG(R)>;
            key-positions = <15 18>;
        };

        NewTab {
            bindings = <&kp LG(T)>;
            key-positions = <15 19>;
        };

        Bold {
            bindings = <&kp LG(B)>;
            key-positions = <47 51>;
        };

        Find {
            bindings = <&kp LG(F)>;
            key-positions = <29 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1    &kp N2       &kp N3      &kp N4      &kp N5  &none                                                            &none      &kp N6  &kp N7      &kp N8      &kp N9       &kp N0      &kp MINUS
&kp TAB    &kp Q     &kp W        &kp E       &kp R       &kp T   &none                                                            &none      &kp Y   &kp U       &kp I       &kp O        &kp P       &kp BSLH
&lt 3 ESC  &lt 1 A   &hm LCTRL S  &hm LALT D  &hm LCMD F  &kp G   &none          &none    &none              &none      &none      &none      &kp H   &hm RCMD J  &hm RALT K  &hm RCTRL L  &lt 1 SEMI  &kp SQT
&kp LSHFT  &kp Z     &kp X        &kp C       &kp V       &kp B                           &kp LG(LEFT)       &kp PG_UP                        &kp N   &kp M       &kp COMMA   &kp DOT      &kp FSLH    &kp RSHFT
&mo 1      &kp CAPS  &none        &none       &none               &mt LCMD BSPC  &kp DEL  &kp LG(RIGHT)      &kp PG_DN  &kp ENTER  &kp SPACE          &none       &none       &none        &mo 2       &mo 1
            >;
        };

        layer_symbol {
            bindings = <
&kp GRAVE  &kp F1     &kp F2    &kp F3     &kp F4    &kp F5     &trans                                      &trans     &kp F6        &kp F7     &kp F8     &kp F9     &kp F10          &kp F11
&kp TILDE  &kp EXCL   &kp AT    &kp HASH   &kp DLLR  &kp PRCNT  &trans                                      &trans     &kp KP_MINUS  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_DIVIDE    &kp F12
&trans     &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR   &trans  &trans  &trans      &trans  &trans  &trans     &kp KP_PLUS   &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MULTIPLY  &kp BSPC
&trans     &trans     &kp LBKT  &kp RBKT   &kp LBRC  &kp RBRC                   &trans      &trans                     &kp KP_DOT    &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_EQUAL     &kp KP_ENTER
&none      &none      &trans    &trans     &trans               &trans  &trans  &trans      &trans  &trans  &kp KP_N0                &trans     &trans     &trans     &none            &none
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                       &none                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                 &bootloader             &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &bt BT_CLR      &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &macro_ver    &none                                             &none           &none                                           &none         &none         &none         &none         &none         &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG         &bl BL_TOG  &none           &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };

        layer_arrow {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans     &trans        &trans           &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &kp PG_UP  &kp LG(LEFT)  &kp UP           &kp LG(RIGHT)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp PG_DN  &kp LEFT      &kp DOWN         &kp RIGHT      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans     &kp LC(TAB)   &kp LC(LS(TAB))  &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans             &trans        &trans           &trans         &trans  &trans
            >;
        };
    };
};
